# SPDX-License-Identifier: GPL-2.0-only

PHONY := __default
__default: vmlinux.thinlink

include include/config/auto.conf
include $(srctree)/scripts/Kbuild.include


# Generate a linker script to ensure correct ordering of initcalls for Clang LTO
# ---------------------------------------------------------------------------

quiet_cmd_gen_initcalls_lds = GEN     $@
      cmd_gen_initcalls_lds = \
	$(PYTHON3) $(srctree)/scripts/jobserver-exec \
	$(PERL) $(real-prereqs) > $@

.tmp_initcalls_thinlink.lds: $(srctree)/scripts/generate_initcall_order.pl \
		vmlinux.a FORCE
	$(call if_changed,gen_initcalls_lds)

targets := .tmp_initcalls_thinlink.lds

initcalls-lds := .tmp_initcalls_thinlink.lds

quiet_cmd_ld_vmlinux.thinlink = LD      $@
      cmd_ld_vmlinux.thinlink = \
	$(AR) t vmlinux.a > .vmlinux_thinlto_bc_files; \
	$(LD) ${KBUILD_LDFLAGS} -r $(addprefix -T , $(initcalls-lds)) \
	--thinlto-index-only @.vmlinux_thinlto_bc_files; \
	touch vmlinux.thinlink

vmlinux.thinlink: vmlinux.a $(initcalls-lds) FORCE
	$(call if_changed,ld_vmlinux.thinlink)

targets += vmlinux.thinlink

# Add FORCE to the prerequisites of a target to force it to be always rebuilt.
# ---------------------------------------------------------------------------

PHONY += FORCE
FORCE:

# Read all saved command lines and dependencies for the $(targets) we
# may be building above, using $(if_changed{,_dep}). As an
# optimization, we don't need to read them if the target does not
# exist, we will rebuild anyway in that case.

existing-targets := $(wildcard $(sort $(targets)))

-include $(foreach f,$(existing-targets),$(dir $(f)).$(notdir $(f)).cmd)

.PHONY: $(PHONY)
