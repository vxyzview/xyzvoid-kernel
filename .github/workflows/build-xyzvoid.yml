name: Build XYZVoid Kernel Package

on:
  push:
    branches: [ linux-6.15.y ]
  pull_request:
    branches: [ linux-6.15.y ]
  workflow_dispatch:
    inputs:
      kernel_config:
        description: 'Kernel configuration (defconfig, allmodconfig, or custom)'
        required: false
        default: 'defconfig'
        type: choice
        options:
          - defconfig
          - allmodconfig
          - custom
      architecture:
        description: 'Target architecture'
        required: false
        default: 'x86_64'
        type: choice
        options:
          - x86_64
          - arm64
          - arm
          - i386

env:
  KERNEL_VERSION: "6.15"
  KERNEL_NAME: "xyzvoid-kernel"
  MAINTAINER: "vxyzview"
  MAINTAINER_EMAIL: "vxyzview@example.com"
  JOBS: 4

jobs:
  build-kernel:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout kernel source
      uses: actions/checkout@v4
      with:
        ref: linux-6.15.y
        fetch-depth: 0

    - name: Set up build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libncurses-dev \
          bison \
          flex \
          libssl-dev \
          libelf-dev \
          bc \
          kmod \
          cpio \
          rsync \
          debhelper \
          kernel-package \
          fakeroot \
          wget \
          xz-utils \
          dwarves \
          rpm \
          rpm-build \
          rpmdevtools \
          createrepo-c \
          git

    - name: Configure build variables
      run: |
        ARCH="${{ github.event.inputs.architecture || 'x86_64' }}"
        CONFIG="${{ github.event.inputs.kernel_config || 'defconfig' }}"
        BUILD_DATE=$(date +%Y%m%d)
        
        echo "TARGET_ARCH=$ARCH" >> $GITHUB_ENV
        echo "KERNEL_CONFIG=$CONFIG" >> $GITHUB_ENV
        echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
        echo "KERNEL_RELEASE=$KERNEL_VERSION-xyzvoid" >> $GITHUB_ENV
        
        # Set cross-compilation variables if needed
        case $ARCH in
          arm64)
            echo "CROSS_COMPILE=aarch64-linux-gnu-" >> $GITHUB_ENV
            echo "ARCH=arm64" >> $GITHUB_ENV
            sudo apt-get install -y gcc-aarch64-linux-gnu
            ;;
          arm)
            echo "CROSS_COMPILE=arm-linux-gnueabihf-" >> $GITHUB_ENV
            echo "ARCH=arm" >> $GITHUB_ENV
            sudo apt-get install -y gcc-arm-linux-gnueabihf
            ;;
          i386)
            echo "ARCH=i386" >> $GITHUB_ENV
            ;;
          *)
            echo "ARCH=x86_64" >> $GITHUB_ENV
            ;;
        esac

    - name: Configure kernel
      run: |
        case $KERNEL_CONFIG in
          defconfig)
            make defconfig
            ;;
          allmodconfig)
            make allmodconfig
            ;;
          custom)
            # Use existing .config if present, otherwise defconfig
            if [ ! -f .config ]; then
              make defconfig
            fi
            ;;
        esac
        
        # Set custom kernel name
        sed -i "s/^CONFIG_LOCALVERSION=.*/CONFIG_LOCALVERSION=\"-xyzvoid\"/" .config || echo 'CONFIG_LOCALVERSION="-xyzvoid"' >> .config

    - name: Build kernel
      run: |
        echo "Building XYZVoid kernel with $JOBS parallel jobs..."
        make -j$JOBS LOCALVERSION=-xyzvoid
        
        # Build modules
        make -j$JOBS modules

    - name: Create base package structure
      run: |
        mkdir -p package-base/boot
        mkdir -p package-base/lib/modules
        mkdir -p package-base/usr/src
        mkdir -p package-base/usr/include
        
        # Copy kernel image
        if [ -f arch/$ARCH/boot/bzImage ]; then
          cp arch/$ARCH/boot/bzImage package-base/boot/vmlinuz-$KERNEL_RELEASE
        elif [ -f arch/$ARCH/boot/Image ]; then
          cp arch/$ARCH/boot/Image package-base/boot/vmlinuz-$KERNEL_RELEASE
        elif [ -f arch/$ARCH/boot/zImage ]; then
          cp arch/$ARCH/boot/zImage package-base/boot/vmlinuz-$KERNEL_RELEASE
        fi
        
        # Copy System.map and config
        cp System.map package-base/boot/System.map-$KERNEL_RELEASE
        cp .config package-base/boot/config-$KERNEL_RELEASE
        
        # Install modules
        make INSTALL_MOD_PATH=package-base modules_install
        
        # Copy kernel headers
        make INSTALL_HDR_PATH=package-base/usr headers_install

    - name: Build Debian package
      run: |
        cp -r package-base debian-package
        mkdir -p debian-package/DEBIAN
        
        cat > debian-package/DEBIAN/control << EOF
        Package: $KERNEL_NAME
        Version: $KERNEL_VERSION-xyzvoid-$BUILD_DATE
        Architecture: $TARGET_ARCH
        Maintainer: $MAINTAINER <$MAINTAINER_EMAIL>
        Description: XYZVoid Custom Linux Kernel $KERNEL_VERSION
         Custom Linux kernel built from linux-$KERNEL_VERSION.y branch
         Built by $MAINTAINER on $BUILD_DATE
         Configuration: $KERNEL_CONFIG
         .
         This kernel includes custom patches and optimizations
         for enhanced performance and compatibility.
        EOF
        
        cat > debian-package/DEBIAN/postinst << 'EOF'
        #!/bin/bash
        set -e
        
        KERNEL_VERSION="$KERNEL_VERSION-xyzvoid"
        
        # Update initramfs if update-initramfs is available
        if command -v update-initramfs >/dev/null 2>&1; then
          update-initramfs -c -k $KERNEL_VERSION || true
        fi
        
        # Update GRUB if available
        if command -v update-grub >/dev/null 2>&1; then
          update-grub || true
        fi
        
        echo "XYZVoid kernel $KERNEL_VERSION installed successfully"
        EOF
        
        cat > debian-package/DEBIAN/prerm << 'EOF'
        #!/bin/bash
        set -e
        
        KERNEL_VERSION="$KERNEL_VERSION-xyzvoid"
        
        # Remove initramfs
        if command -v update-initramfs >/dev/null 2>&1; then
          update-initramfs -d -k $KERNEL_VERSION || true
        fi
        EOF
        
        chmod +x debian-package/DEBIAN/postinst
        chmod +x debian-package/DEBIAN/prerm
        
        dpkg-deb --build debian-package $KERNEL_NAME-$KERNEL_VERSION-xyzvoid-$TARGET_ARCH.deb

    - name: Build RPM package (Fedora)
      run: |
        mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
        
        # Create source tarball
        tar -czf ~/rpmbuild/SOURCES/$KERNEL_NAME-$KERNEL_VERSION-xyzvoid.tar.gz -C package-base .
        
        cat > ~/rpmbuild/SPECS/$KERNEL_NAME.spec << EOF
        Name:           $KERNEL_NAME
        Version:        $KERNEL_VERSION
        Release:        xyzvoid.$BUILD_DATE%{?dist}
        Summary:        XYZVoid Custom Linux Kernel
        
        License:        GPLv2
        URL:            https://github.com/$MAINTAINER/$KERNEL_NAME
        Source0:        %{name}-%{version}-xyzvoid.tar.gz
        
        BuildArch:      $TARGET_ARCH
        Packager:       $MAINTAINER <$MAINTAINER_EMAIL>
        
        %description
        XYZVoid Custom Linux Kernel $KERNEL_VERSION built from linux-$KERNEL_VERSION.y branch.
        This kernel includes custom patches and optimizations for enhanced performance
        and compatibility. Built by $MAINTAINER on $BUILD_DATE.
        
        Configuration used: $KERNEL_CONFIG
        
        %prep
        %setup -q -n .
        
        %build
        # Nothing to build, kernel already compiled
        
        %install
        cp -r * %{buildroot}/
        
        %post
        KERNEL_VERSION="$KERNEL_VERSION-xyzvoid"
        
        # Update initramfs
        if command -v dracut >/dev/null 2>&1; then
          dracut --force /boot/initramfs-\$KERNEL_VERSION.img \$KERNEL_VERSION || true
        fi
        
        # Update GRUB
        if command -v grub2-mkconfig >/dev/null 2>&1; then
          grub2-mkconfig -o /boot/grub2/grub.cfg || true
        elif command -v grub-mkconfig >/dev/null 2>&1; then
          grub-mkconfig -o /boot/grub/grub.cfg || true
        fi
        
        echo "XYZVoid kernel \$KERNEL_VERSION installed successfully"
        
        %preun
        KERNEL_VERSION="$KERNEL_VERSION-xyzvoid"
        
        # Remove initramfs
        rm -f /boot/initramfs-\$KERNEL_VERSION.img || true
        
        %files
        /boot/*
        /lib/modules/*
        /usr/include/*
        
        %changelog
        * $(date +'%a %b %d %Y') $MAINTAINER <$MAINTAINER_EMAIL> - $KERNEL_VERSION-xyzvoid.$BUILD_DATE
        - Built XYZVoid kernel $KERNEL_VERSION from linux-$KERNEL_VERSION.y branch
        - Configuration: $KERNEL_CONFIG
        - Architecture: $TARGET_ARCH
        - Custom patches and optimizations applied
        - Enhanced performance and compatibility improvements
        EOF
        
        rpmbuild -bb ~/rpmbuild/SPECS/$KERNEL_NAME.spec
        cp ~/rpmbuild/RPMS/$TARGET_ARCH/$KERNEL_NAME-$KERNEL_VERSION-xyzvoid.$BUILD_DATE*.rpm .

    - name: Build Arch Linux package
      run: |
        mkdir -p arch-package
        cp -r package-base/* arch-package/
        
        cat > PKGBUILD << EOF
        # Maintainer: $MAINTAINER <$MAINTAINER_EMAIL>
        
        pkgname=$KERNEL_NAME
        pkgver=$KERNEL_VERSION.xyzvoid.$BUILD_DATE
        pkgrel=1
        pkgdesc="XYZVoid Custom Linux Kernel $KERNEL_VERSION"
        arch=('$TARGET_ARCH')
        url="https://github.com/$MAINTAINER/$KERNEL_NAME"
        license=('GPL2')
        provides=('linux')
        conflicts=('linux')
        backup=('etc/mkinitcpio.d/$KERNEL_NAME.preset')
        
        package() {
          cd "\$srcdir"
          
          # Install kernel files
          install -Dm644 ../arch-package/boot/vmlinuz-$KERNEL_RELEASE "\$pkgdir/boot/vmlinuz-$KERNEL_NAME"
          install -Dm644 ../arch-package/boot/System.map-$KERNEL_RELEASE "\$pkgdir/boot/System.map-$KERNEL_NAME"
          install -Dm644 ../arch-package/boot/config-$KERNEL_RELEASE "\$pkgdir/boot/config-$KERNEL_NAME"
          
          # Install modules
          cp -r ../arch-package/lib "\$pkgdir/"
          
          # Install headers
          cp -r ../arch-package/usr "\$pkgdir/"
          
          # Create mkinitcpio preset
          install -Dm644 /dev/stdin "\$pkgdir/etc/mkinitcpio.d/$KERNEL_NAME.preset" << PRESET
        # mkinitcpio preset file for $KERNEL_NAME
        
        ALL_config="/etc/mkinitcpio.conf"
        ALL_kver="$KERNEL_RELEASE"
        
        PRESETS=('default' 'fallback')
        
        #default_config="/etc/mkinitcpio.conf"
        default_image="/boot/initramfs-$KERNEL_NAME.img"
        #default_options=""
        
        #fallback_config="/etc/mkinitcpio.conf"
        fallback_image="/boot/initramfs-$KERNEL_NAME-fallback.img"
        fallback_options="-S autodetect"
        PRESET
        }
        EOF
        
        # Create package
        mkdir -p pkg src
        fakeroot -- bash -c '
          source PKGBUILD
          package
          cd pkg
          tar -czf ../$KERNEL_NAME-$KERNEL_VERSION.xyzvoid.$BUILD_DATE-1-$TARGET_ARCH.pkg.tar.gz *
        '

    - name: Build Void Linux package
      run: |
        mkdir -p void-package/destdir
        cp -r package-base/* void-package/destdir/
        
        cat > void-package/template << EOF
        # Template file for '$KERNEL_NAME'
        pkgname=$KERNEL_NAME
        version=$KERNEL_VERSION.xyzvoid.$BUILD_DATE
        revision=1
        archs="$TARGET_ARCH"
        wrksrc="\${pkgname}-\${version}"
        build_style=meta
        short_desc="XYZVoid Custom Linux Kernel $KERNEL_VERSION"
        maintainer="$MAINTAINER <$MAINTAINER_EMAIL>"
        license="GPL-2.0-only"
        homepage="https://github.com/$MAINTAINER/$KERNEL_NAME"
        
        provides="linux-\${version}_\${revision}"
        conflicts="linux"
        
        do_install() {
          # Install kernel files
          vinstall destdir/boot/vmlinuz-$KERNEL_RELEASE 644 boot vmlinuz-$KERNEL_NAME
          vinstall destdir/boot/System.map-$KERNEL_RELEASE 644 boot System.map-$KERNEL_NAME
          vinstall destdir/boot/config-$KERNEL_RELEASE 644 boot config-$KERNEL_NAME
          
          # Install modules
          vcopy destdir/lib usr/
          
          # Install headers
          vcopy destdir/usr/include usr/
        }
        
        post_install() {
          # Generate initramfs
          if command -v dracut >/dev/null 2>&1; then
            dracut --force /boot/initramfs-$KERNEL_NAME.img $KERNEL_RELEASE || true
          fi
          
          # Update bootloader
          if command -v update-grub >/dev/null 2>&1; then
            update-grub || true
          fi
          
          echo "XYZVoid kernel $KERNEL_RELEASE installed successfully"
        }
        
        pre_remove() {
          # Remove initramfs
          rm -f /boot/initramfs-$KERNEL_NAME.img || true
        }
        EOF
        
        # Create xbps package
        cd void-package
        tar -czf ../$KERNEL_NAME-$KERNEL_VERSION.xyzvoid.$BUILD_DATE_1.$TARGET_ARCH.xbps destdir template

    - name: Generate changelog
      run: |
        # Get commit messages since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        
        if [ -n "$LAST_TAG" ]; then
          COMMITS=$(git log --oneline --no-merges $LAST_TAG..HEAD | head -20)
        else
          COMMITS=$(git log --oneline --no-merges -10)
        fi
        
        cat > CHANGELOG.md << EOF
        # XYZVoid Kernel $KERNEL_VERSION Release
        
        **Built by:** $MAINTAINER  
        **Build Date:** $(date '+%Y-%m-%d %H:%M:%S UTC')  
        **Architecture:** $TARGET_ARCH  
        **Configuration:** $KERNEL_CONFIG  
        **Kernel Version:** $KERNEL_VERSION-xyzvoid  
        
        ## 🚀 What's New
        
        This release of XYZVoid kernel is based on the latest linux-$KERNEL_VERSION.y stable branch with custom patches and optimizations for enhanced performance and compatibility.
        
        ### ✨ Features
        - Custom kernel branding and version string
        - Optimized build configuration for $TARGET_ARCH
        - Enhanced compatibility patches
        - Performance optimizations
        - Security hardening improvements
        
        ### 📦 Available Packages
        - **Debian/Ubuntu**: \`$KERNEL_NAME-$KERNEL_VERSION-xyzvoid-$TARGET_ARCH.deb\`
        - **Fedora/RHEL/CentOS**: \`$KERNEL_NAME-$KERNEL_VERSION-xyzvoid.$BUILD_DATE.*.rpm\`
        - **Arch Linux**: \`$KERNEL_NAME-$KERNEL_VERSION.xyzvoid.$BUILD_DATE-1-$TARGET_ARCH.pkg.tar.gz\`
        - **Void Linux**: \`$KERNEL_NAME-$KERNEL_VERSION.xyzvoid.$BUILD_DATE_1.$TARGET_ARCH.xbps\`
        - **Generic**: \`$KERNEL_NAME-$KERNEL_VERSION-xyzvoid-$TARGET_ARCH.tar.xz\`
        
        ### 🔧 Installation Instructions
        
        #### Debian/Ubuntu
        \`\`\`bash
        sudo dpkg -i $KERNEL_NAME-$KERNEL_VERSION-xyzvoid-$TARGET_ARCH.deb
        sudo update-grub
        \`\`\`
        
        #### Fedora/RHEL/CentOS
        \`\`\`bash
        sudo rpm -ivh $KERNEL_NAME-$KERNEL_VERSION-xyzvoid.$BUILD_DATE.*.rpm
        sudo grub2-mkconfig -o /boot/grub2/grub.cfg
        \`\`\`
        
        #### Arch Linux
        \`\`\`bash
        sudo pacman -U $KERNEL_NAME-$KERNEL_VERSION.xyzvoid.$BUILD_DATE-1-$TARGET_ARCH.pkg.tar.gz
        sudo mkinitcpio -p $KERNEL_NAME
        sudo grub-mkconfig -o /boot/grub/grub.cfg
        \`\`\`
        
        #### Void Linux
        \`\`\`bash
        sudo xbps-install --force $KERNEL_NAME-$KERNEL_VERSION.xyzvoid.$BUILD_DATE_1.$TARGET_ARCH.xbps
        sudo update-grub
        \`\`\`
        
        ### 📋 Recent Changes
        
        EOF
        
        if [ -n "$COMMITS" ]; then
          echo "Recent commits included in this build:" >> CHANGELOG.md
          echo '```' >> CHANGELOG.md
          echo "$COMMITS" >> CHANGELOG.md
          echo '```' >> CHANGELOG.md
        else
          echo "Initial release build from linux-$KERNEL_VERSION.y branch" >> CHANGELOG.md
        fi
        
        cat >> CHANGELOG.md << EOF
        
        ### ⚠️ Important Notes
        
        - Always backup your current kernel before installing
        - This is a custom kernel build and may not be suitable for all systems
        - Test in a virtual machine or non-production environment first
        - Report issues at: https://github.com/$MAINTAINER/$KERNEL_NAME/issues
        
        ### 🛠️ Build Information
        
        - **Source Branch**: linux-$KERNEL_VERSION.y
        - **Commit SHA**: ${{ github.sha }}
        - **Build Environment**: Ubuntu Latest (GitHub Actions)
        - **Compiler**: GCC $(gcc --version | head -n1 | cut -d' ' -f4)
        - **Build Jobs**: $JOBS parallel
        
        ---
        
        **Full Changelog**: https://github.com/${{ github.repository }}/compare/\${LAST_TAG:-$(git rev-list --max-parents=0 HEAD)}...${{ github.sha }}
        EOF

    - name: Create TAR.XZ archive
      run: |
        tar -cJf $KERNEL_NAME-$KERNEL_VERSION-xyzvoid-$TARGET_ARCH.tar.xz -C package-base .

    - name: Generate build information
      run: |
        cat > build-info.txt << EOF
        XYZVoid Kernel Build Information
        ================================
        
        Kernel Name: $KERNEL_NAME
        Kernel Version: $KERNEL_VERSION-xyzvoid
        Architecture: $TARGET_ARCH
        Configuration: $KERNEL_CONFIG
        Build Date: $(date)
        Maintainer: $MAINTAINER
        
        Build Details:
        - Commit SHA: ${{ github.sha }}
        - Branch: ${{ github.ref_name }}
        - Build Environment: ${{ runner.os }}
        - GCC Version: $(gcc --version | head -n1)
        - Make Version: $(make --version | head -n1)
        
        Package Files Generated:
        - Debian: $KERNEL_NAME-$KERNEL_VERSION-xyzvoid-$TARGET_ARCH.deb
        - Fedora: $KERNEL_NAME-$KERNEL_VERSION-xyzvoid.$BUILD_DATE.*.rpm
        - Arch: $KERNEL_NAME-$KERNEL_VERSION.xyzvoid.$BUILD_DATE-1-$TARGET_ARCH.pkg.tar.gz
        - Void: $KERNEL_NAME-$KERNEL_VERSION.xyzvoid.$BUILD_DATE_1.$TARGET_ARCH.xbps
        - Generic: $KERNEL_NAME-$KERNEL_VERSION-xyzvoid-$TARGET_ARCH.tar.xz
        
        Installation Notes:
        - Contains kernel image: /boot/vmlinuz-$KERNEL_RELEASE
        - Contains system map: /boot/System.map-$KERNEL_RELEASE
        - Contains kernel config: /boot/config-$KERNEL_RELEASE
        - Contains kernel modules: /lib/modules/$KERNEL_RELEASE/
        - Contains kernel headers: /usr/include/
        EOF

    - name: Upload Debian package
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.KERNEL_NAME }}-debian-${{ env.TARGET_ARCH }}
        path: ${{ env.KERNEL_NAME }}-${{ env.KERNEL_VERSION }}-xyzvoid-${{ env.TARGET_ARCH }}.deb
        retention-days: 30

    - name: Upload RPM package
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.KERNEL_NAME }}-fedora-${{ env.TARGET_ARCH }}
        path: ${{ env.KERNEL_NAME }}-${{ env.KERNEL_VERSION }}-xyzvoid.${{ env.BUILD_DATE }}*.rpm
        retention-days: 30

    - name: Upload Arch package
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.KERNEL_NAME }}-arch-${{ env.TARGET_ARCH }}
        path: ${{ env.KERNEL_NAME }}-${{ env.KERNEL_VERSION }}.xyzvoid.${{ env.BUILD_DATE }}-1-${{ env.TARGET_ARCH }}.pkg.tar.gz
        retention-days: 30

    - name: Upload Void package
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.KERNEL_NAME }}-void-${{ env.TARGET_ARCH }}
        path: ${{ env.KERNEL_NAME }}-${{ env.KERNEL_VERSION }}.xyzvoid.${{ env.BUILD_DATE }}_1.${{ env.TARGET_ARCH }}.xbps
        retention-days: 30

    - name: Upload TAR.XZ archive
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.KERNEL_NAME }}-generic-${{ env.TARGET_ARCH }}
        path: ${{ env.KERNEL_NAME }}-${{ env.KERNEL_VERSION }}-xyzvoid-${{ env.TARGET_ARCH }}.tar.xz
        retention-days: 30

    - name: Upload build information
      uses: actions/upload-artifact@v4
      with:
        name: build-info-${{ env.TARGET_ARCH }}
        path: |
          build-info.txt
          CHANGELOG.md
        retention-days: 30

    - name: Create release on tag
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ env.KERNEL_NAME }}-${{ env.KERNEL_VERSION }}-xyzvoid-${{ env.TARGET_ARCH }}.deb
          ${{ env.KERNEL_NAME }}-${{ env.KERNEL_VERSION }}-xyzvoid.${{ env.BUILD_DATE }}*.rpm
          ${{ env.KERNEL_NAME }}-${{ env.KERNEL_VERSION }}.xyzvoid.${{ env.BUILD_DATE }}-1-${{ env.TARGET_ARCH }}.pkg.tar.gz
          ${{ env.KERNEL_NAME }}-${{ env.KERNEL_VERSION }}.xyzvoid.${{ env.BUILD_DATE }}_1.${{ env.TARGET_ARCH }}.xbps
          ${{ env.KERNEL_NAME }}-${{ env.KERNEL_VERSION }}-xyzvoid-${{ env.TARGET_ARCH }}.tar.xz
          build-info.txt
        body_path: CHANGELOG.md
        name: "XYZVoid Kernel ${{ env.KERNEL_VERSION }}-xyzvoid (${{ env.TARGET_ARCH }})"
        tag_name: ${{ github.ref_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
